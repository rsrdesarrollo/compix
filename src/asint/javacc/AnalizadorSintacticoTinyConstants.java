/* Generated By:JavaCC: Do not edit this line. AnalizadorSintacticoTinyConstants.java */
package asint.javacc;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface AnalizadorSintacticoTinyConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int letra = 1;
  /** RegularExpression Id. */
  int digitoPositivo = 2;
  /** RegularExpression Id. */
  int digito = 3;
  /** RegularExpression Id. */
  int int_t = 5;
  /** RegularExpression Id. */
  int bool = 6;
  /** RegularExpression Id. */
  int true_t = 7;
  /** RegularExpression Id. */
  int false_t = 8;
  /** RegularExpression Id. */
  int and = 9;
  /** RegularExpression Id. */
  int or = 10;
  /** RegularExpression Id. */
  int not = 11;
  /** RegularExpression Id. */
  int identificador = 12;
  /** RegularExpression Id. */
  int numero = 13;
  /** RegularExpression Id. */
  int get = 14;
  /** RegularExpression Id. */
  int let = 15;
  /** RegularExpression Id. */
  int eq = 16;
  /** RegularExpression Id. */
  int neq = 17;
  /** RegularExpression Id. */
  int divsec = 18;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<letra>",
    "<digitoPositivo>",
    "<digito>",
    "<token of kind 4>",
    "\"int\"",
    "\"bool\"",
    "\"true\"",
    "\"false\"",
    "\"and\"",
    "\"or\"",
    "\"not\"",
    "<identificador>",
    "<numero>",
    "\">=\"",
    "\"<=\"",
    "\"==\"",
    "\"!=\"",
    "\"&&\"",
    "\";\"",
    "\"=\"",
    "\"(\"",
    "\")\"",
    "\"<\"",
    "\">\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
  };

}
